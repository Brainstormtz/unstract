version: '3.8'

services:
  backend:
    image: unstract/backend:${VERSION:-latest}
    container_name: unstract-backend
    restart: unless-stopped
    command: --migrate
    ports:
      - "8000:8000"
    env_file:
      - ../backend/.env
    depends_on:
      - coolify-postgres  # Changed from db
      - coolify-redis    # Changed from redis
      - coolify-minio    # Changed from minio
    environment:
      - ENVIRONMENT=production
      - APPLICATION_NAME=unstract-backend
      # Add Coolify-specific DB connection
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@coolify-postgres:5432/${POSTGRES_DB}
      - REDIS_HOST=coolify-redis
      - REDIS_PORT=6379
      - MINIO_ENDPOINT=coolify-minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_BUCKET_NAME=unstract
      - MINIO_USE_SSL=false
    volumes:
      - prompt_studio_data:/app/prompt-studio-data
      - /data/coolify/workflow_data:/data  # Coolify-compatible path
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.rule=Host(`${YOUR_DOMAIN}`) && PathPrefix(`/api/v1`, `/deployment`)

  worker:
    image: unstract/backend:${VERSION:-latest}
    # ... rest of worker config ...
    environment:
      - ENVIRONMENT=production
      - REDIS_HOST=coolify-redis  # Explicitly set Redis host
      - WORKER_AUTOSCALE=${WORKER_AUTOSCALE:-2,1}  # Default value

  # Apply similar changes to all other services:
  worker-logging:
    depends_on:
      - coolify-redis  # Changed from redis
    environment:
      - REDIS_HOST=coolify-redis
      - WORKER_LOGGING_AUTOSCALE=${WORKER_LOGGING_AUTOSCALE:-2,1}

  worker-api-deployment:
    depends_on:
      - coolify-redis
    environment:
      - REDIS_HOST=coolify-redis
      - WORKER_API_DEPLOYMENTS_AUTOSCALE=${WORKER_API_DEPLOYMENTS_AUTOSCALE:-2,1}

  celery-beat:
    depends_on:
      - coolify-postgres
      - coolify-redis

  # Remove reverse-proxy/createbuckets services (Coolify handles this)
  # Add explicit service declarations for Coolify-managed dependencies
  coolify-postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  coolify-redis:
    image: redis:alpine
    restart: always
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis_data:/data

  coolify-minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    ports:
      - "9000:9000"
      - "9001:9001"

volumes:
  prompt_studio_data:
  postgres_data:
  redis_data:
  minio_data:
  workflow_data:
